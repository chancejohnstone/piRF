% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combined.R
\name{rfint}
\alias{rfint}
\title{rfint()}
\usage{
rfint(
  formula = formula,
  train_data = NULL,
  test_data = NULL,
  method = "Zhang",
  alpha = 0.1,
  Zhang_method = "oob",
  symmetry = TRUE,
  seed = NULL,
  m_try = 2,
  num_trees = 500,
  min_node_size = 5,
  num_threads = detectCores(),
  calibrate = FALSE,
  featureBias = TRUE,
  predictionBias = TRUE,
  Tung_R = 5,
  Tung_num_trees = 75,
  Ghosal_variant = 1,
  concise = FALSE,
  prop = 0.632
)
}
\arguments{
\item{formula}{Object of class formula or character describing the model to fit. Interaction terms supported only for numerical variables.}

\item{train_data}{Training data of class data.frame, matrix, dgCMatrix (Matrix) or gwaa.data (GenABEL). Matches ranger() requirements.}

\item{test_data}{Test data of class data.frame, matrix, dgCMatrix (Matrix) or gwaa.data (GenABEL). Utilizes ranger::predict() to get prediction intervals for test data.}

\item{method}{Choose what method to generate RF prediction intervals. ("Zhang", "quantile", "Romano", "Ghosal", "Roy", "Tung", "HDI). Defaults to "Zhang".}

\item{alpha}{Significance level for prediction intervals.}

\item{m_try}{Number of variables to randomly select from at each split.}

\item{num_trees}{Number of trees.}

\item{min_node_size}{Minimum number of observations before split at a node.}

\item{num_threads}{The number of threads to use in parallel. Default is the current number of cores.}

\item{concise}{Predictions for each method output in addition to intervals. Defaults to FALSE.}

\item{prop}{Proportion of training data to sample for each tree. Currently variant 2 not implemented.}

\item{keep_inbag}{Saves matrix of observations and which tree(s) they occur in. Required to be true to generate variance estimates for Ghosal, Hooker 2018 method. *Should not be an option...}

\item{intervals}{Generate prediction intervals or not.}

\item{forest_type}{Determines what type of forest: regression forest vs. quantile regression forest. *Should not be an option...}

\item{replace}{Sample with replacement, or not. Utilized for the two different variants outlined in Ghosal, Hooker 2018. Currently variant 2 not implemented.}

\item{variant}{Choose which variant to use. Currently variant 2 not implemented.}
}
\description{
Single wrapper for seven different methods, and their variants, to create random forest prediction intervals. Seven methods currently supported.
}
\examples{
library(piRF)

getPILength <- function(PI){
#average PI length across each set of predictions
l <- PI[,2] - PI[,1]
avg_l <- mean(l)
return(avg_l)
}

getCoverage <- function(x, response){
  #output coverage for test data
  coverage <- sum((response >= x[,1]) * (response <= x[,2]))/length(response)
  return(coverage)
}

#import airfoil self noise dataset
data(airfoil)

#generate train and test data
ratio <- .9
nrow <- nrow(airfoil)
n <- floor(nrow*ratio)
samp <- sample(1:nrow, size = n)
train <- airfoil[samp,]
test <- airfoil[-samp,]

#generate prediction intervals
res <- rfint(pressure ~ . , train_data = train, test_data = test,
             method = c("quantile", "Zhang", "Tung", "Romano", "Roy", "HDI", "Ghosal"))

#empirical coverage, and average prediction interval length for each method
coverage <- sapply(res, FUN = getCoverage, response = test$pressure)
coverage
length <- sapply(res, FUN = getPILength)
length
}
\keyword{boosting}
\keyword{forest,}
\keyword{interval,}
\keyword{prediction}
\keyword{random}
